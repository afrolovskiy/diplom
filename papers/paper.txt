Статический поиск гонок


Введение

Общие слова про актуальность проблемы поиска гонок в программах. Определение понятия состояния гонки. Примеры нескольких небольших простеньких  программ, в которых возможно возникновение гонок при обращении разделяемым переменных и/или областям памяти.



Подходы к поиску гонок

Перечисление основных подходов: формальная верификация, динамический анализ, статический анализ. Очень краткое описание каждого из подходов: основные идеи, достоинства и недостатки.
Далее надо сказать о том, что дальше будем говорить только о статических методах, и рассматривать только их.

Статический анализ гонок

Перечисление основных подходов, применяемых при статическом анализе кода с целью выявления гонок, - аннотирование кода, анализ потока выполнения программы и т.д. (посмотрю может еще используются и другие; еще стоит упомянуть про model checking и symbolic execution, но не до конца понятно как их классифицировать). Очень краткое описание кадого из них (2-3 предложения). Далее будут главы с чуть более полным описанием каждого из них:
       - Аннотирование кода
       - Анализ потока выполнения
В каждой из глав будет описание каждого подхода: основные идеи, достоинства и недостатки. Примеры использования каждого из них.
При описании подхода, связанного с анализом потока выполнения будут перечислены основные методы: Locksmith, CoBE, Relay.

Методы статического поиска гонок

Будет 3 главы, каждая из которых будет посвящена одноименному методу:
       - Locksmith
       - CoBE
       - Relay
В каждой из глав будет описание основных идей соответствующего метода, будут выделены достоинства и недостатки. По возможности, будут представлены высокоуровневые описания основных алгоритмов при поиске гонок с использованием соответствующего метода, показаны примеры.

Заключение

В заключении будут представлены кратко сильные и слабые стороны каждого из рассмотренных подходов поиска гонок. По возможности. обоснование применимости того или иного подхода в той или иной области.
